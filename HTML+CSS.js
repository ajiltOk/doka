//HTML (Hypertext Markup Language) - это код, который используется для структурирования и отображения веб-страницы и её контента.

/*Мета-теги — это необязательные атрибуты, размещенные в заголовке страницы, между тегами <head> и </head>.

Выделяется несколько основных направлений использования мета-тегов:

- мета-теги могут идентифицировать авторство веб-документа, его адрес, частоту его обновлений;
- мета-теги используются поисковыми роботами для индексации и создания заголовков гипертекстовых документов;
- мета-теги влияют на режим отображения веб-страниц.

Мета-теги можно разделить на две основные группы — это NAME и HTTP-EQUIV. Группа NAME (keywords, description, author, copyright, robots) отвечает за текстовую информацию
о веб-документе, его авторе, а также — формирует рекомендации для поисковых роботов. Мета-теги, относящиеся к группе HTTP-EQUIV (Content-Type, refresh, Content-Language),        
формируют заголовок веб-страницы и определяют его обработку, а также управляют действиями браузеров и используются для формирования информации, выдаваемой обычными заголовками.*/

/*Семантическая вёрстка — подход к разметке, который опирается не на содержание сайта, а на смысловое предназначение каждого блока и логическую структуру документа, что в        
свою очередь определяет доступность сайта для незрячих или частично незрячих, использующих для просмотра сайта скринридер.

Основные семантические тэги: <article>, <section>, <aside>, <nav>, <header>, <main>, <footer>.*/

//CSS (Cascading Style Sheets) — это код, который используется для стилизации веб-страницы.

/*Вес селекторов CSS по убыванию:

- стили, заданные в атрибуте style
- cелекторы по идентификатору (#id)
- cелекторы по классу (.class)
- селекторы по атрибуту и селекторы с псевдоклассами
- селекторы по тегу
- селекторы с псевдоэлементами*/

/*Каждый из блоков (box model), занимающий пространство на странице имеет такие свойства, как:

- padding, пространство только вокруг контента
- border, сплошная линия, которая расположена рядом с padding
- margin, пространство вокруг внешней стороны элемента
*/

//Блочные элементы: div, section, nav, header, footer, main, aside, article, p

//Строчные элементы: b, strong, i, em, u, a, span, mark, del, ins, s, small

/*Значения свойства display:

- значения, которые задают тип элементу и влияют на поток элемента в документа: block, inline
  - block - блочные элементы располагаются один над другим, вертикально. Блок стремится расшириться на всю доступную ширину.
  - inline - элементы располагаются на той же строке, последовательно. Ширина и высота элемента определяются по содержимому. Поменять их нельзя.
- значения, которые определяют как будут располагаться дочерние элементы блока: table, flex, grid
- значения, которые задают тип элемента и работают только если являются дочерними элементами с определенным типом: table-column, table-caption, table-cell, table-row

Другие значения: 
- none - элемент не показывается, вообще.
- inline-block - означает элемент, который продолжает находиться в строке (inline), но при этом может иметь важные свойства блока (width/height).
- inline-flex, inline-grid, list-item*/

//Псевдокласс в CSS — это ключевое слово, добавленное к селектору, которое определяет его особое состояние (:hover, :visited, :checked, :active, :focus, :first-child).

//Псевдоэлемент в CSS — это ключевое слово, добавляемое к селектору, которое позволяет стилизовать определённую часть выбранного элемента (::after, ::before, ::first-letter).

/* Отличие адаптивной вёрстки от респонсив-дизайна:
- Респонсив-дизайн (от responsive, отзывчивый) — способ автоматически подстраивать интерфейс сайта под размеры и разрешение экрана. Не нужно готовить несколько макетов страниц,
сайт с респонсивным дизайном растягивает или сжимает один макет с помощью программного модуля.
- Адаптивная вёрстка или дизайн — создание страниц сайта, автоматически подстраивающихся под размер, разрешение и ориентацию экрана устройства. Для разных девайсов готовят разные
дизайны, при входе на сайт автоматически загружается оптимизированный под устройство макет.

Разработка сайта при использовании респонсив-дизайна упрощается и удешевляется. Но при этом страницы с респонсив-дизайном весят больше, им требуется больше времени на загрузку.
При адаптивной вёрстке необходимо загрузить один готовый оптимизированный дизайн страницы. При респонсив-дизайне — макет максимального размера и разрешения нужно сжать под устройство пользователя.

Медиа-запросы - это функция CSS, которая позволяет применять стили на основе набора параметров браузера и операционной системы. Чаще всего используются min-width или max-width.*/

/*Позиционирование элементов на странице:

- position: static - статическое позиционирование производится по умолчанию, в том случае, если свойство position не указано.
- position: relative - относительное позиционирование сдвигает элемент относительно его обычного положения. Для этого необходимо указать координаты left/right/top/bottom.
- position: absolute
Абсолютное позиционирование делает следующие вещи:
  - элемент исчезает с того места, где он должен быть и позиционируется заново. Остальные элементы, располагаются так, как будто этого элемента никогда не было.
  - координаты top/bottom/left/right для нового местоположения отсчитываются от ближайшего позиционированного родителя, т.е. родителя с позиционированием, отличным от static.
    Если такого родителя нет – то относительно документа.
  - ширина элемента с position: absolute устанавливается по содержимому.
  - элемент получает display:block, который перекрывает почти все возможные display.
Важное отличие от relative: так как элемент удаляется со своего обычного места, то элементы под ним сдвигаются, занимая освободившееся пространство.
- position: fixed - позиционирует объект точно так же, как absolute, но относительно window. Когда страницу прокручивают, фиксированный элемент остаётся на своём месте
и не прокручивается вместе со страницей.*/

/*Единицы измерения:

- px - абсолютные, все значения браузер в итоге пересчитает в пиксели.
- em – относительные, они определяются по текущему контексту.
- rem - задаёт размер относительно размера шрифта элемента <html>.
- vw и vh - задаёт размер относительно размера экрана устройства в процентах.*/

/*Преимущества препроцессора SASS: переменные, вложенности, фрагментирование, импорт, миксины, расширение/наследование, математические операторы, функции*/
