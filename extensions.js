/*Chrome Extension - это маленькая программа, которая модифицирует и дополняет функциональность браузера Google Chrome. После написания, файлы пакуются в специальный файл
с расширением .crx, который собой являет zip архив.*/

/*Манифест — главный файл в chrome расширении, поскольку здесь информация о доступах которые нужны, о подключаемых файлах, настройки безопасности и многое другое. Например:

Manifest_version — Версия манифест файла
Name — название расширения
Description — описание расширения
Version — версия расширения
Permissions — массив с названиями доступов, которые необходимы для корректной работы расширения, например без пермишина tabs вы не сможете работать с вкладками браузера
Content_scripts — массив файлов, которые будут подключены как контент скрипты
Background — описание файла или файлов, которые будут выполнять роль background скрипта и страницы
Web_accessible_resources — набор файлов, которые имеют открытый доступ извне
Browser_action — настройка соответствующей кнопки, в тулбаре
Icons — списки иконок по стандартным размерам 16 48 и 128.*/

/*Background page — невидимая страница, которая содержит основную логику расширения. Главной особенностью background страницы есть то, что она запускается и выполняет некую работу
в фоновом режиме, как только запускается браузер и держится в оперативной памяти как фоновый процесс на протяжении сессии. Когда установлено много расширений, список задач этом
списке также большой. Они занимают часть памяти и возможно других ресурсов, но не выполняют никаких функций, так как непосредственно само расширение не запущено, а в списке вы
видите background страницу конкретного расширения.

Event Pages — вместо непрерывной работы в фоновом режиме, ивент страница запускается только тогда, когда нужно — например чтобы обработать конкретное событие. После чего
выгружается, освобождая память до того момента пока конкретное событие не сработает в следующий раз. В плане кода, разницы никакой между этими двумя подходами нет, а единственное
что нужно, указать в manifest.json файле это корректное значение проперти persistent.*/

/*Content Scripts — это javascript файлы или код, которые выполняються не в отдельном фоновом процессе (как бекграунд скрипты) а в контексте Веб страницы. Контент скрипты
используют в ограниченном виде Chrome API. Полноценный доступ есть только к DOM дереву страницы. С контент скрипта вы можете инициировать ивенты, изменять DOM. Даже можете
добавлять script тег в страницу и подключать нужные файлы.*/

/*Content Security Policy — это набор строгих правил, которые необходимы для того чтобы сделать расширения безопасней и контролировать контент который может быть загружен
и выполнен в расширении.*/

/*Коммуникация между Background page и Content Scripts

Так как background страница в другой области видимости чем например контент скрипт который выполняется в контексте веб-страницы используется Chrome Javascript API. 
Chrome Javascript API вводит концепцию Message Passing с помощью которой и происходит коммуникация. Background страница может подписываться на сообщения которые пришли из content
script-а и наоборот, кроме того давать ответ в том же канале. API дает возможность работать с короткими запросами похожими больше на события и долговременными (аналог полинга).

Непосредственно с контент скрипта, доступиться к функциям или переменной страницы в данный момент невозможно. Но для этого можно использовать Web Accessible Resources.*/
