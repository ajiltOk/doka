/*Обработчик событий - функция, которая сработает, как только событие произошло.

Есть три способа назначения обработчиков событий:
- атрибут HTML: onclick="атрибут".
- DOM-свойство: elem.onclick = function.
- специальные методы: elem.addEventListener(event, handler[, phase]) для добавления, removeEventListener для удаления.
//
//

Всплытие(Hoisting) 
Принцип, когда на элементе происходит событие, обработчики сначала срабатывают на нём, потом на его родителе, затем выше и так далее, вверх по цепочке предков.
Самый глубокий элемент, который вызывает событие, называется целевым элементом, и он доступен через event.target.
Элемент, на котором в данный момент сработал обработчик (тот, на котором «висит» конкретный обработчик) доступен через event.currentTarget().
Для того, чтобы остановить "всплытие" нужно вызвать метод event.stopPropagation().

Делегирование событий - это метод, который позволяет отслеживать события на множестве элементов с помощью только одного обработчика.

Чтобы отменить действие браузера по умолчанию, используется event.preventDefault() или return false, если обработчик назначен через on<событие>.
*/
